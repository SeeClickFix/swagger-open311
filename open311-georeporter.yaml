swagger: '2.0'

info:
  version: "2.0"
  title: Open311 GeoReport API
  description: Open311 allows you to get/post civic information of cities via a unified interface. The GeoReport part allows you to submit and view issues at the public local space
  termsOfService: <?>
  contact:
    name: Open311 community
    url: http://wiki.open311.org/GeoReport_v2/
    email:  discuss@lists.open311.org
  license:
    name: <?>
    url: http://

consumes:
        - application/json
        - application/xml
produces:
        - application/json
        - application/xml
#securityDefinitions: <?>
#security:

#todo add example values for mocking this API

definitions:
  Service:
    description: A single service (type) offered via Open311
    properties:
      service_code:
        type: string
        description: unique identifier for the service request type
      service_name:
        type: string
        description: human readable name of the service request type
      description:
        type: string
      metadata:
        type: boolean
        description: Are there additional form fields for this service type? If true use GET service definition for that one
      type:
        type: string
        description: Possible values realtime, batch, blackbox #todo as enum?
      keywords:
        type: string
        description: list of keywords or tags seperated by comma
      group:
        type: string
        description: Category or group to cluster different request types e.g. “sanitation”
  ServiceDefinition:
    description: Attributes associated with a service code. These attributes can be unique to the city/jurisdiction.
    properties:
      service_code:
        type: string
        description: unique identifier for the service request type
      attributes:
        type: array
        items:
          $ref: '#/definitions/ServiceAttribute'
  ServiceAttribute:
    description: A single attribute extension for a service
    properties:
      variable:
        type: boolean
        description: If only used to present information to the user within the description field or if that user input is needed
      code:
        type: string
        description: Unique identifier for the attribute #<?>why and limitations
      datatype:
        type: string #todo string, number, datetime, text, singlevaluelist, multivaluelist.
        description: Type of field used for user input. According widgets will be picked for user inputs
      required:
        type: boolean
        description: If attributes value required to submit service request
      datatype_description:
        type: string
        description: Description of the datatype which helps the user provide their input
      order:
        type: integer #todo Limit numbers?
        description: Sort order that the attributes will be presented to the user. 1 is shown first in the list.
      description:
        type: string
        description: description of the attribute field with instructions for the user to find and identify the requested information
      values:
        type: array
        items:
          $ref: '#/definitions/AttributeValue'
  AttributeValue:
    description: Possible value for ServiceAttribute that defines lists
    properties:
      key:
        type: string
        description: Unique identifier associated with an option for singlevaluelist or multivaluelist (analogous to the value attribute in an html option tag).
      name:
        type: string
        description: Human readable title of an option for singlevaluelist or multivaluelist (analogous to the innerhtml text node of an html option tag).

  Request:
   description: Issues that have been reported as service requests.
   properties:
    service_name:
      type: string
      description: The human readable name of the service request type.
    service_code:
      type: string
      description: The unique identifier for the service request type
    description:
      type: string
      description: A full description of the request or report submitted.

paths:
#todo jurisdiction_id as general concept?
#todo response_format as general concept?
#todo extract service_code?
#todo extract an error model for responses?
  /requests.{response_format}:
    get:
      summary: requests
      description: Query the current status of multiple requests.
      parameters:
        - name: jurisdiction_id
          in: query
          description: <?>
          required: true
          type: string
        - name: service_request_id
          in: query
          description: To call multiple Service Requests at once, multiple service_request_id can be declared; comma delimited.This overrides all other arguments.
          required: false
          type: string
        - name: service_code
          in: query
          description: Specify the service type by calling the unique ID of the service_code.
          required: false
          type: string
        - name: start_date
          in: query
          description: Earliest datetime to include in search. When provided with end_date, allows one to search for requests which have a requested_datetime that matches a given range, but may not span more than 90 days.
          required: false
          type: string
        - name: end_date
          in: query
          description: Latest datetime to include in search. When provided with start_date, allows one to search for requests which have a requested_datetime that matches a given range, but may not span more than 90 days.
          required: false
          type: string
        - name: status
          in: query
          description: Allows one to search for requests which have a specific status. This defaults to all statuses; can be declared multiple times, comma delimited.
          required: false
          type: string
        - name: response_format
          in: path

          required: true
          type: string
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
             $ref: '#/definitions/Request'
        400:
          description: jurisdiction_id was not provided (specified in error response) or General Service error (Any failure during service query processing. Client will have to notify us)
        401:
          description:  jurisdiction_id not found (specified in error response)

  /services.{response_format}:
    get:
      summary: service types
      description: List acceptable service request types and their associated service codes. These request types can be unique to the city/jurisdiction.
      parameters:
        - name: jurisdiction_id
          in: query
          required: true
          type: string
        - name: response_format
          in: path
          required: true
          type: string
      responses:
        200:
          description: ok
          schema:
              type: array
              items:
                $ref: '#/definitions/Service'
        400:
          description: The URL request is invalid or service is not running or reachable. Client should notify us after checking URL
        404:
          description: jurisdiction_id provided was not found (specify in error response).
  /services/{service_code}.{response_format}:
    get:
      summary: (extended) definition of a service type
      description: Define attributes associated with a service code. These attributes can be unique to the city/jurisdiction.
      parameters:
        - name: jurisdiction_id
          in: query
          required: true
          type: string
        - name: response_format
          in: path
          required: true
          type: string
        - name: service_code
          in: path
          required: true
          type: string
      responses:
        200:
          description: returns ServiceDefinition for the Service
          schema:
            $ref: '#/definitions/ServiceDefinition'
        400:
          description: service_code or jurisdiction_id provided were not found (specify in error response)
        404:
          description: service_code or jurisdiction_id provided were not found (specify in error response)